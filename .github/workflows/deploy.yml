name: Build and Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Build React App with Docker
      run: |
        cd frontend
        # Create production Dockerfile
        cat > Dockerfile.prod << EOF
        FROM node:18-alpine as builder
        WORKDIR /app
        COPY package*.json ./
        RUN npm install --omit=dev
        COPY . .
        RUN npm run build
        
        FROM nginx:alpine
        COPY --from=builder /app/build /usr/share/nginx/html
        EXPOSE 80
        CMD ["nginx", "-g", "daemon off;"]
        EOF
        
        # Build the production image
        docker build -f Dockerfile.prod -t quiz-app:prod .
        
        # Create container and extract build files
        docker create --name temp-container quiz-app:prod
        docker cp temp-container:/usr/share/nginx/html ./build
        docker rm temp-container

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './frontend/build'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4 